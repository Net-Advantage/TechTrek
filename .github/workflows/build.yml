name: TechTrek Build

on:
    push:
        branches: [ main ]


jobs:
    build:

        runs-on: ubuntu-latest

        services:
            sql-server:
                image: mcr.microsoft.com/mssql/server:2019-latest
                env:
                    SA_PASSWORD: "Password123"
                    ACCEPT_EULA: "Y"
                ports:
                    - 14331:1433
                #options: --health-cmd "SELECT 1" --health-interval 10s --health-timeout 5s --health-retries 5

        steps:

        - name: Checkout source
          uses: actions/checkout@v4

        - name: Print workspace path
          run: | 
              echo "Workspace directory: $GITHUB_WORKSPACE"

        - name: List files in /src directory
          run: |
            echo "Listing files and directories in the workspace /src directory:"
            ls -alh "${GITHUB_WORKSPACE}/src"
  
        - name: Setup .NET 9.0
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: '9.0.x'

        - name: Restore dependencies using nuget.config
          run: dotnet restore src/Nabs.TechTrek.sln --configfile ./src/nuget.config

        - name: Build Solution
          run: dotnet build src/Nabs.TechTrek.sln --configuration Release --no-restore

        - name: Reset the Test Scenario Databases
          shell: pwsh
          run: ./src/Persistence/Nabs.TechTrek.PersistenceCli/ResetDatabases.ps1
          
        - name: Run Solution Tests with code coverage
          run: dotnet test src/Nabs.TechTrek.sln --configuration Release --no-restore --no-build --logger "console;verbosity=detailed" --logger "trx;LogFileName=TestResults/testresults.trx" --settings src/coverlet.runsettings

        - name: Install ReportGenerator
          run: dotnet tool install --global dotnet-reportgenerator-globaltool

        - name: Upload Test Results
          uses: actions/upload-artifact@v4
          with:
            name: TestResults
            path: TestResults/testresults.trx

        - name: Publish Test Annotations
          uses: dorny/test-reporter@v1
          with:
            name: Unit Tests
            path: ./**/TestResults/testresults.trx
            reporter: dotnet-trx
          
        - name: Generate Code Coverage HTML Report
          run: reportgenerator -reports:**/TestResults/*/coverage.cobertura.xml -targetdir:coverage-report -reporttypes:Html

        - name: Generate Code Coverage Markdown GitHub Report
          env:
            PATH: ${{ env.PATH }}:$HOME/.dotnet/tools
          run: reportgenerator -reports:**/TestResults/*/coverage.cobertura.xml -targetdir:coverage-report -reporttypes:MarkdownSummaryGithub

        - name: Publish Coverage Report
          uses: actions/upload-artifact@v3
          with:
            name: code-coverage-report
            path: ./CoverageReport/SummaryGithub.md

        - name: Deploy to GitHub Pages
          uses: peaceiris/actions-gh-pages@v3
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: ./coveragereport
            destination_dir: coverage
